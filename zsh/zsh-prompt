#!/bin/sh

# autoload vcs and colors
autoload -Uz vcs_info
autoload -U colors && colors

# enable only git
zstyle ':vcs_info:*' enable git

# setup hook which runs before every prompt
precmd_vcs_info() { vcs_info }
precmd_functions+=( precmd_vcs_info )
setopt prompt_subst

# add a function to check for untracked files in directory
# from https://github.com/zsh-users/zsh/blob/master/Misc/vcs_info-examples
zstyle ':vcs_info:git*+set-message:*' hooks git-untracked

+vi-git-untracked(){
	if [[ $(git rev-parse --is-inside-work-tree 2> /dev/null) == 'true' ]] && \
	git status --porcelain | grep '??' &> /dev/null ; then
		# This will show the marker if there are any untracked files in repo.
		# If instead you want to show the marker only if there are untracked files in $PWD. use...
		# [[ -n $(git ls-files --others --exclude-standard) ]]; then
		hook_com[staged]+='!' 	# Signify new files with a bang
	fi
}

zstyle ':vcs_info:*' check-for-changes true
# zstyle vcs_info:git formats "%r/%S %b %m%u%c"
zstyle ':vcs_info:git:*' formats "%{$fg[blue]%}(%{$fg[red]%}%m%u%c%{$fg[yellow]%}<git-logo>%{$fg[magneta]%} %b%{$fg[blue]%})"

# format our main prompt for hostname current directory, and permissions
# [%n@%m ]$ 
PROMPT="%B%{$fg[cyan]%}[%{$fg[white]%}%n%{$fg[red]%}@%{$fg[yellow]%}%m%{$fg[cyan]%} %1~]%{$fg[reset_color]%}$ %{$fg[reset_color]%}"
#PROMPT+="\$vcs_info_msg_0 "
